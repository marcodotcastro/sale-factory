<div class="row">
  <%= form_tag cliente_dashboards_mapa_representantes_path(current_usuario.cliente), method: :get do |f| %>
    <div class="col-md-1 col-sm-1 col-xs-1">
      <%= select_tag "cidade[estado_eq]", options_from_collection_for_select(@estado_list, "estado", "estado"), include_blank: "All", class: "form-control" %>
    </div>
    <div class="col-md-2 col-sm-2 col-xs-2">
      <%= text_field_tag "cidade[populacao_gteq]", nil, placeholder: "População", class: "form-control" %>
    </div>
    <div class="col-md-3 col-sm-3 col-xs-3">
      <%= select_tag "cidade[descricao_eq]", options_from_collection_for_select(@cidade_list, "descricao", "descricao"), include_blank: "All", class: "form-control" %>
    </div>
    <div class="col-md-3 col-sm-3 col-xs-3">
      <%= select_tag "representante[id_eq]", options_from_collection_for_select(@representante_list, "id", "descricao"), include_blank: "All", class: "form-control" %>
    </div>
    <div class="col-md-3 col-sm-3 col-xs-3">
      <%= submit_tag "Pesquisar", class: "btn btn-default" %>
      <%= link_to "Limpar", request.path, class: "btn btn-default" %>
    </div>
  <% end %>
</div>

<div class="row">
  <div class="x_content">
    <div id="representante-map"></div>
  </div>
</div>

<script>
    var cidades = {};

    <% @cidades.each_with_index do |cidade,index| %>
    <% unless cidade.longitude.nil? and cidade.latitude.nil? %>
    cidades["cidade<%= index %>"] = {
        center: {lat: <%= cidade.latitude%>, lng: <%= cidade.longitude %>},
        populacao: <%= cidade.populacao %>,
        descricao: '<%= cidade.descricao %>'
    };
    <% end %>
    <% end %>

    var representantes = {};

    <% @representantes.each_with_index do |representante,index| %>
    <% unless representante.cidade.longitude.nil? and representante.cidade.latitude.nil? %>
    representantes["representante<%= index %>"] = {
        center: {lat: <%= representante.cidade.latitude%>, lng: <%= representante.cidade.longitude %>},
        populacao: <%= representante.cidade.populacao %>,
        descricao: '<%= representante.descricao %>'
    };
    <% end %>
    <% end %>

    function initMap() {
        <%#TODO: Adicionar estado, sua capital e o centro do mapa com a capital  %>
        var map = new google.maps.Map(document.getElementById('representante-map'), {
            zoom: 7,
            center: {lat: -16.6954997, lng: -49.4446992},
            mapTypeId: 'terrain'
        });

        const infoArr = [];

        Object.keys(cidades).forEach(key => {
            const item = cidades[key];

            var fillcolor;

            if (item.populacao <= 10000) {
                fillcolor = '#ff0004'
            } else if (item.populacao > 10000 && item.populacao <= 20000) {
                fillcolor = '#ff46cf'
            } else if (item.populacao > 20000 && item.populacao <= 50000) {
                fillcolor = '#f9ff0f'
            } else if (item.populacao > 50000 && item.populacao <= 100000) {
                fillcolor = '#1520ff'
            } else if (item.populacao > 100000) {
                fillcolor = '#00ff05'
            }

            let cityCircle = new google.maps.Circle({
                strokeColor: '#000000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: fillcolor,
                fillOpacity: 0.35,
                map: map,
                center: item.center,
                radius: Math.sqrt(item.populacao) * 50
            });
            const valor = item.descricao + ", " + formatNumber(item.populacao) + " hab";
            const infoWindow = new google.maps.InfoWindow({
                content: valor
            });
            infoArr.push(infoWindow);

            google.maps.event.addListener(cityCircle, 'click', function (ev) {
                infoWindow.setPosition(ev.latLng);
                infoArr.forEach(info => info.close());
                infoWindow.open(map);
            });

        });

        Object.keys(representantes).forEach(key => {
            const item = representantes[key];

            let cityCircle = new google.maps.Circle({
                strokeColor: '#000000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#000000',
                fillOpacity: 0.35,
                map: map,
                center: item.center,
                radius: 175000
            });
            const valor = item.descricao;
            const infoWindow = new google.maps.InfoWindow({
                content: valor
            });
            infoArr.push(infoWindow);

            google.maps.event.addListener(cityCircle, 'click', function (ev) {
                infoWindow.setPosition(ev.latLng);
                infoArr.forEach(info => info.close());
                infoWindow.open(map);
            });

        });

    }
</script>
